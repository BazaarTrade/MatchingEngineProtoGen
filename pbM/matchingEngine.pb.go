// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v5.27.3
// source: proto/matchingEngine.proto

package pbM

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PlaceOrderReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64  `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
	IsBid  bool   `protobuf:"varint,2,opt,name=IsBid,proto3" json:"IsBid,omitempty"`
	Pair   string `protobuf:"bytes,3,opt,name=Pair,proto3" json:"Pair,omitempty"`
	Qty    string `protobuf:"bytes,4,opt,name=Qty,proto3" json:"Qty,omitempty"`
	Price  string `protobuf:"bytes,5,opt,name=Price,proto3" json:"Price,omitempty"`
	Type   string `protobuf:"bytes,6,opt,name=Type,proto3" json:"Type,omitempty"`
}

func (x *PlaceOrderReq) Reset() {
	*x = PlaceOrderReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceOrderReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceOrderReq) ProtoMessage() {}

func (x *PlaceOrderReq) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceOrderReq.ProtoReflect.Descriptor instead.
func (*PlaceOrderReq) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{0}
}

func (x *PlaceOrderReq) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *PlaceOrderReq) GetIsBid() bool {
	if x != nil {
		return x.IsBid
	}
	return false
}

func (x *PlaceOrderReq) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *PlaceOrderReq) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *PlaceOrderReq) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *PlaceOrderReq) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type PlaceOrderRes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Order       *Order   `protobuf:"bytes,1,opt,name=Order,proto3" json:"Order,omitempty"`
	MatchOrders []*Order `protobuf:"bytes,2,rep,name=MatchOrders,proto3" json:"MatchOrders,omitempty"`
}

func (x *PlaceOrderRes) Reset() {
	*x = PlaceOrderRes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaceOrderRes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaceOrderRes) ProtoMessage() {}

func (x *PlaceOrderRes) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaceOrderRes.ProtoReflect.Descriptor instead.
func (*PlaceOrderRes) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{1}
}

func (x *PlaceOrderRes) GetOrder() *Order {
	if x != nil {
		return x.Order
	}
	return nil
}

func (x *PlaceOrderRes) GetMatchOrders() []*Order {
	if x != nil {
		return x.MatchOrders
	}
	return nil
}

type Orders struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Orders []*Order `protobuf:"bytes,1,rep,name=Orders,proto3" json:"Orders,omitempty"`
}

func (x *Orders) Reset() {
	*x = Orders{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Orders) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Orders) ProtoMessage() {}

func (x *Orders) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Orders.ProtoReflect.Descriptor instead.
func (*Orders) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{2}
}

func (x *Orders) GetOrders() []*Order {
	if x != nil {
		return x.Orders
	}
	return nil
}

type OrderID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderID int64 `protobuf:"varint,1,opt,name=OrderID,proto3" json:"OrderID,omitempty"`
}

func (x *OrderID) Reset() {
	*x = OrderID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderID) ProtoMessage() {}

func (x *OrderID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderID.ProtoReflect.Descriptor instead.
func (*OrderID) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{3}
}

func (x *OrderID) GetOrderID() int64 {
	if x != nil {
		return x.OrderID
	}
	return 0
}

type UserID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID int64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"UserID,omitempty"`
}

func (x *UserID) Reset() {
	*x = UserID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserID) ProtoMessage() {}

func (x *UserID) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserID.ProtoReflect.Descriptor instead.
func (*UserID) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{4}
}

func (x *UserID) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID         int64                  `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID     int64                  `protobuf:"varint,2,opt,name=UserID,proto3" json:"UserID,omitempty"`
	IsBid      bool                   `protobuf:"varint,3,opt,name=IsBid,proto3" json:"IsBid,omitempty"`
	Pair       string                 `protobuf:"bytes,4,opt,name=Pair,proto3" json:"Pair,omitempty"`
	Price      string                 `protobuf:"bytes,5,opt,name=Price,proto3" json:"Price,omitempty"`
	Qty        string                 `protobuf:"bytes,6,opt,name=Qty,proto3" json:"Qty,omitempty"`
	SizeFilled string                 `protobuf:"bytes,7,opt,name=SizeFilled,proto3" json:"SizeFilled,omitempty"`
	Status     string                 `protobuf:"bytes,8,opt,name=Status,proto3" json:"Status,omitempty"`
	Type       string                 `protobuf:"bytes,9,opt,name=Type,proto3" json:"Type,omitempty"`
	CreatedAt  *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=CreatedAt,proto3" json:"CreatedAt,omitempty"`
	ClosedAt   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=ClosedAt,proto3" json:"ClosedAt,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{5}
}

func (x *Order) GetID() int64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Order) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Order) GetIsBid() bool {
	if x != nil {
		return x.IsBid
	}
	return false
}

func (x *Order) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *Order) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Order) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *Order) GetSizeFilled() string {
	if x != nil {
		return x.SizeFilled
	}
	return ""
}

func (x *Order) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *Order) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *Order) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Order) GetClosedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ClosedAt
	}
	return nil
}

type PairsParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PairParams []*PairParams `protobuf:"bytes,1,rep,name=PairParams,proto3" json:"PairParams,omitempty"`
}

func (x *PairsParams) Reset() {
	*x = PairsParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PairsParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairsParams) ProtoMessage() {}

func (x *PairsParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairsParams.ProtoReflect.Descriptor instead.
func (*PairsParams) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{6}
}

func (x *PairsParams) GetPairParams() []*PairParams {
	if x != nil {
		return x.PairParams
	}
	return nil
}

type PairParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair            string  `protobuf:"bytes,1,opt,name=Pair,proto3" json:"Pair,omitempty"`
	PricePrecisions []int32 `protobuf:"varint,2,rep,packed,name=PricePrecisions,proto3" json:"PricePrecisions,omitempty"`
	QtyPrecision    int32   `protobuf:"varint,3,opt,name=QtyPrecision,proto3" json:"QtyPrecision,omitempty"`
}

func (x *PairParams) Reset() {
	*x = PairParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PairParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairParams) ProtoMessage() {}

func (x *PairParams) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairParams.ProtoReflect.Descriptor instead.
func (*PairParams) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{7}
}

func (x *PairParams) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *PairParams) GetPricePrecisions() []int32 {
	if x != nil {
		return x.PricePrecisions
	}
	return nil
}

func (x *PairParams) GetQtyPrecision() int32 {
	if x != nil {
		return x.QtyPrecision
	}
	return 0
}

type Pair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair string `protobuf:"bytes,1,opt,name=Pair,proto3" json:"Pair,omitempty"`
}

func (x *Pair) Reset() {
	*x = Pair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pair) ProtoMessage() {}

func (x *Pair) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pair.ProtoReflect.Descriptor instead.
func (*Pair) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{8}
}

func (x *Pair) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

type OrderBookSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair    string   `protobuf:"bytes,1,opt,name=Pair,proto3" json:"Pair,omitempty"`
	Bids    []*Limit `protobuf:"bytes,2,rep,name=Bids,proto3" json:"Bids,omitempty"`
	Asks    []*Limit `protobuf:"bytes,3,rep,name=Asks,proto3" json:"Asks,omitempty"`
	BidsQty string   `protobuf:"bytes,4,opt,name=BidsQty,proto3" json:"BidsQty,omitempty"`
	AsksQty string   `protobuf:"bytes,5,opt,name=AsksQty,proto3" json:"AsksQty,omitempty"`
}

func (x *OrderBookSnapshot) Reset() {
	*x = OrderBookSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderBookSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderBookSnapshot) ProtoMessage() {}

func (x *OrderBookSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderBookSnapshot.ProtoReflect.Descriptor instead.
func (*OrderBookSnapshot) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{9}
}

func (x *OrderBookSnapshot) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *OrderBookSnapshot) GetBids() []*Limit {
	if x != nil {
		return x.Bids
	}
	return nil
}

func (x *OrderBookSnapshot) GetAsks() []*Limit {
	if x != nil {
		return x.Asks
	}
	return nil
}

func (x *OrderBookSnapshot) GetBidsQty() string {
	if x != nil {
		return x.BidsQty
	}
	return ""
}

func (x *OrderBookSnapshot) GetAsksQty() string {
	if x != nil {
		return x.AsksQty
	}
	return ""
}

type Limit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Price string `protobuf:"bytes,1,opt,name=Price,proto3" json:"Price,omitempty"`
	Qty   string `protobuf:"bytes,2,opt,name=Qty,proto3" json:"Qty,omitempty"`
}

func (x *Limit) Reset() {
	*x = Limit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Limit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Limit) ProtoMessage() {}

func (x *Limit) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Limit.ProtoReflect.Descriptor instead.
func (*Limit) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{10}
}

func (x *Limit) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Limit) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

type Trades struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pair   string   `protobuf:"bytes,1,opt,name=Pair,proto3" json:"Pair,omitempty"`
	Trades []*Trade `protobuf:"bytes,2,rep,name=Trades,proto3" json:"Trades,omitempty"`
}

func (x *Trades) Reset() {
	*x = Trades{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trades) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trades) ProtoMessage() {}

func (x *Trades) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trades.ProtoReflect.Descriptor instead.
func (*Trades) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{11}
}

func (x *Trades) GetPair() string {
	if x != nil {
		return x.Pair
	}
	return ""
}

func (x *Trades) GetTrades() []*Trade {
	if x != nil {
		return x.Trades
	}
	return nil
}

type Trade struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsBid bool                   `protobuf:"varint,1,opt,name=IsBid,proto3" json:"IsBid,omitempty"`
	Price string                 `protobuf:"bytes,2,opt,name=Price,proto3" json:"Price,omitempty"`
	Qty   string                 `protobuf:"bytes,3,opt,name=Qty,proto3" json:"Qty,omitempty"`
	Time  *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=Time,proto3" json:"Time,omitempty"`
}

func (x *Trade) Reset() {
	*x = Trade{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Trade) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Trade) ProtoMessage() {}

func (x *Trade) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Trade.ProtoReflect.Descriptor instead.
func (*Trade) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{12}
}

func (x *Trade) GetIsBid() bool {
	if x != nil {
		return x.IsBid
	}
	return false
}

func (x *Trade) GetPrice() string {
	if x != nil {
		return x.Price
	}
	return ""
}

func (x *Trade) GetQty() string {
	if x != nil {
		return x.Qty
	}
	return ""
}

func (x *Trade) GetTime() *timestamppb.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

type PairPricePrecisions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Precisions []int32 `protobuf:"varint,1,rep,packed,name=Precisions,proto3" json:"Precisions,omitempty"`
}

func (x *PairPricePrecisions) Reset() {
	*x = PairPricePrecisions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_matchingEngine_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PairPricePrecisions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PairPricePrecisions) ProtoMessage() {}

func (x *PairPricePrecisions) ProtoReflect() protoreflect.Message {
	mi := &file_proto_matchingEngine_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PairPricePrecisions.ProtoReflect.Descriptor instead.
func (*PairPricePrecisions) Descriptor() ([]byte, []int) {
	return file_proto_matchingEngine_proto_rawDescGZIP(), []int{13}
}

func (x *PairPricePrecisions) GetPrecisions() []int32 {
	if x != nil {
		return x.Precisions
	}
	return nil
}

var File_proto_matchingEngine_proto protoreflect.FileDescriptor

var file_proto_matchingEngine_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x70, 0x62,
	0x4d, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x8d, 0x01, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x42,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x42, 0x69, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x69, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50,
	0x61, 0x69, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x51, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x51, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x22,
	0x5f, 0x0a, 0x0d, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73,
	0x12, 0x20, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0a, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x05, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x52, 0x0b, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73,
	0x22, 0x2c, 0x0a, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x22, 0x0a, 0x06, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62, 0x4d,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x06, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x23,
	0x0a, 0x07, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x49, 0x44, 0x22, 0x20, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x16, 0x0a,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0xbf, 0x02, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12,
	0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x49, 0x44, 0x12,
	0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x73, 0x42, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73, 0x42, 0x69, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x50, 0x61, 0x69, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x69,
	0x72, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x51, 0x74, 0x79, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x51, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x53, 0x69, 0x7a,
	0x65, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x53,
	0x69, 0x7a, 0x65, 0x46, 0x69, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12,
	0x36, 0x0a, 0x08, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x64, 0x41, 0x74, 0x22, 0x3e, 0x0a, 0x0b, 0x50, 0x61, 0x69, 0x72, 0x73,
	0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2f, 0x0a, 0x0a, 0x50, 0x61, 0x69, 0x72, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x70, 0x62, 0x4d,
	0x2e, 0x50, 0x61, 0x69, 0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x0a, 0x50, 0x61, 0x69,
	0x72, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x6e, 0x0a, 0x0a, 0x50, 0x61, 0x69, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x69, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x50, 0x72, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0f, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x51, 0x74, 0x79, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x51, 0x74, 0x79, 0x50, 0x72,
	0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x1a, 0x0a, 0x04, 0x50, 0x61, 0x69, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x50, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50,
	0x61, 0x69, 0x72, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f,
	0x6b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x69,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x69, 0x72, 0x12, 0x1e, 0x0a,
	0x04, 0x42, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x4d, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x04, 0x42, 0x69, 0x64, 0x73, 0x12, 0x1e, 0x0a,
	0x04, 0x41, 0x73, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x70, 0x62,
	0x4d, 0x2e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x04, 0x41, 0x73, 0x6b, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x42, 0x69, 0x64, 0x73, 0x51, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x42, 0x69, 0x64, 0x73, 0x51, 0x74, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x73, 0x6b, 0x73, 0x51,
	0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x73, 0x6b, 0x73, 0x51, 0x74,
	0x79, 0x22, 0x2f, 0x0a, 0x05, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x51, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x51,
	0x74, 0x79, 0x22, 0x40, 0x0a, 0x06, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x12, 0x0a, 0x04,
	0x50, 0x61, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x50, 0x61, 0x69, 0x72,
	0x12, 0x22, 0x0a, 0x06, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0a, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x52, 0x06, 0x54, 0x72,
	0x61, 0x64, 0x65, 0x73, 0x22, 0x75, 0x0a, 0x05, 0x54, 0x72, 0x61, 0x64, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x49, 0x73, 0x42, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x49, 0x73,
	0x42, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x51, 0x74, 0x79,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x51, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x35, 0x0a, 0x13, 0x50,
	0x61, 0x69, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0a, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f,
	0x6e, 0x73, 0x32, 0xaf, 0x04, 0x0a, 0x0e, 0x4d, 0x61, 0x74, 0x63, 0x68, 0x69, 0x6e, 0x67, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x36, 0x0a, 0x0a, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f, 0x72,
	0x64, 0x65, 0x72, 0x12, 0x12, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x50, 0x6c, 0x61, 0x63, 0x65, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x50, 0x6c,
	0x61, 0x63, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x52, 0x65, 0x73, 0x22, 0x00, 0x12, 0x29, 0x0a,
	0x0b, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0c, 0x2e, 0x70,
	0x62, 0x4d, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x0a, 0x2e, 0x70, 0x62, 0x4d,
	0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x0b, 0x2e, 0x70,
	0x62, 0x4d, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x4d, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22, 0x00, 0x12, 0x27, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x73, 0x12, 0x0b, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x44, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x22,
	0x00, 0x12, 0x3c, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x42, 0x6f, 0x6f, 0x6b, 0x12, 0x0f, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12,
	0x36, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x42, 0x6f,
	0x6f, 0x6b, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x50, 0x61,
	0x69, 0x72, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x10, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x73, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x22, 0x00, 0x12, 0x3f, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x69, 0x72,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x09, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x1a, 0x18, 0x2e, 0x70, 0x62, 0x4d,
	0x2e, 0x50, 0x61, 0x69, 0x72, 0x50, 0x72, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x63, 0x69, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x22, 0x00, 0x12, 0x2a, 0x0a, 0x0c, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x12, 0x09, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x50, 0x61, 0x69,
	0x72, 0x1a, 0x0b, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x54, 0x72, 0x61, 0x64, 0x65, 0x73, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x40, 0x0a, 0x17, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x12, 0x09, 0x2e,
	0x70, 0x62, 0x4d, 0x2e, 0x50, 0x61, 0x69, 0x72, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x4d, 0x2e, 0x4f,
	0x72, 0x64, 0x65, 0x72, 0x42, 0x6f, 0x6f, 0x6b, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74,
	0x22, 0x00, 0x30, 0x01, 0x42, 0x06, 0x5a, 0x04, 0x2f, 0x70, 0x62, 0x4d, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_matchingEngine_proto_rawDescOnce sync.Once
	file_proto_matchingEngine_proto_rawDescData = file_proto_matchingEngine_proto_rawDesc
)

func file_proto_matchingEngine_proto_rawDescGZIP() []byte {
	file_proto_matchingEngine_proto_rawDescOnce.Do(func() {
		file_proto_matchingEngine_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_matchingEngine_proto_rawDescData)
	})
	return file_proto_matchingEngine_proto_rawDescData
}

var file_proto_matchingEngine_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_proto_matchingEngine_proto_goTypes = []any{
	(*PlaceOrderReq)(nil),         // 0: pbM.PlaceOrderReq
	(*PlaceOrderRes)(nil),         // 1: pbM.PlaceOrderRes
	(*Orders)(nil),                // 2: pbM.Orders
	(*OrderID)(nil),               // 3: pbM.OrderID
	(*UserID)(nil),                // 4: pbM.UserID
	(*Order)(nil),                 // 5: pbM.Order
	(*PairsParams)(nil),           // 6: pbM.PairsParams
	(*PairParams)(nil),            // 7: pbM.PairParams
	(*Pair)(nil),                  // 8: pbM.Pair
	(*OrderBookSnapshot)(nil),     // 9: pbM.OrderBookSnapshot
	(*Limit)(nil),                 // 10: pbM.Limit
	(*Trades)(nil),                // 11: pbM.Trades
	(*Trade)(nil),                 // 12: pbM.Trade
	(*PairPricePrecisions)(nil),   // 13: pbM.PairPricePrecisions
	(*timestamppb.Timestamp)(nil), // 14: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 15: google.protobuf.Empty
}
var file_proto_matchingEngine_proto_depIdxs = []int32{
	5,  // 0: pbM.PlaceOrderRes.Order:type_name -> pbM.Order
	5,  // 1: pbM.PlaceOrderRes.MatchOrders:type_name -> pbM.Order
	5,  // 2: pbM.Orders.Orders:type_name -> pbM.Order
	14, // 3: pbM.Order.CreatedAt:type_name -> google.protobuf.Timestamp
	14, // 4: pbM.Order.ClosedAt:type_name -> google.protobuf.Timestamp
	7,  // 5: pbM.PairsParams.PairParams:type_name -> pbM.PairParams
	10, // 6: pbM.OrderBookSnapshot.Bids:type_name -> pbM.Limit
	10, // 7: pbM.OrderBookSnapshot.Asks:type_name -> pbM.Limit
	12, // 8: pbM.Trades.Trades:type_name -> pbM.Trade
	14, // 9: pbM.Trade.Time:type_name -> google.protobuf.Timestamp
	0,  // 10: pbM.MatchingEngine.PlaceOrder:input_type -> pbM.PlaceOrderReq
	3,  // 11: pbM.MatchingEngine.CancelOrder:input_type -> pbM.OrderID
	4,  // 12: pbM.MatchingEngine.GetCurrentOrders:input_type -> pbM.UserID
	4,  // 13: pbM.MatchingEngine.GetOrders:input_type -> pbM.UserID
	7,  // 14: pbM.MatchingEngine.CreateOrderBook:input_type -> pbM.PairParams
	8,  // 15: pbM.MatchingEngine.DeleteOrderBook:input_type -> pbM.Pair
	15, // 16: pbM.MatchingEngine.GetPairsParams:input_type -> google.protobuf.Empty
	8,  // 17: pbM.MatchingEngine.GetPairPricePrecisions:input_type -> pbM.Pair
	8,  // 18: pbM.MatchingEngine.StreamTrades:input_type -> pbM.Pair
	8,  // 19: pbM.MatchingEngine.StreamOrderBookSnapshot:input_type -> pbM.Pair
	1,  // 20: pbM.MatchingEngine.PlaceOrder:output_type -> pbM.PlaceOrderRes
	5,  // 21: pbM.MatchingEngine.CancelOrder:output_type -> pbM.Order
	2,  // 22: pbM.MatchingEngine.GetCurrentOrders:output_type -> pbM.Orders
	2,  // 23: pbM.MatchingEngine.GetOrders:output_type -> pbM.Orders
	15, // 24: pbM.MatchingEngine.CreateOrderBook:output_type -> google.protobuf.Empty
	15, // 25: pbM.MatchingEngine.DeleteOrderBook:output_type -> google.protobuf.Empty
	6,  // 26: pbM.MatchingEngine.GetPairsParams:output_type -> pbM.PairsParams
	13, // 27: pbM.MatchingEngine.GetPairPricePrecisions:output_type -> pbM.PairPricePrecisions
	11, // 28: pbM.MatchingEngine.StreamTrades:output_type -> pbM.Trades
	9,  // 29: pbM.MatchingEngine.StreamOrderBookSnapshot:output_type -> pbM.OrderBookSnapshot
	20, // [20:30] is the sub-list for method output_type
	10, // [10:20] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_proto_matchingEngine_proto_init() }
func file_proto_matchingEngine_proto_init() {
	if File_proto_matchingEngine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_matchingEngine_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PlaceOrderReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_matchingEngine_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PlaceOrderRes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_matchingEngine_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Orders); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_matchingEngine_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*OrderID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_matchingEngine_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*UserID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_matchingEngine_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_matchingEngine_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*PairsParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_matchingEngine_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*PairParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_matchingEngine_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*Pair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_matchingEngine_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*OrderBookSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_matchingEngine_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*Limit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_matchingEngine_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Trades); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_matchingEngine_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Trade); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_matchingEngine_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*PairPricePrecisions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_matchingEngine_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_matchingEngine_proto_goTypes,
		DependencyIndexes: file_proto_matchingEngine_proto_depIdxs,
		MessageInfos:      file_proto_matchingEngine_proto_msgTypes,
	}.Build()
	File_proto_matchingEngine_proto = out.File
	file_proto_matchingEngine_proto_rawDesc = nil
	file_proto_matchingEngine_proto_goTypes = nil
	file_proto_matchingEngine_proto_depIdxs = nil
}
